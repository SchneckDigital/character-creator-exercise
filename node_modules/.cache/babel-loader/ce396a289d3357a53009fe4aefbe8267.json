{"ast":null,"code":"var _jsxFileName = \"/Users/lloydschneck/Repos/character-creator-main/src/components/ControlPane/ControlPane.js\";\nimport React from 'react';\nimport ToggleButton from '../ToggleButton';\nimport ButtonRow from '../ButtonRow';\nimport styles from './ControlPane.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlPane = ({\n  title,\n  type,\n  options,\n  currentOption,\n  handleSelectOption\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.controlPane,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.metadata,\n        children: [options.length, \" options\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonRow, {\n      children: options.map(({\n        id,\n        label,\n        color,\n        children\n      }) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        isSelected: currentOption === id,\n        onClick: () => handleSelectOption(id),\n        label: label,\n        color: color,\n        children: children\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ControlPane;\nexport default ControlPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlPane\");","map":{"version":3,"sources":["/Users/lloydschneck/Repos/character-creator-main/src/components/ControlPane/ControlPane.js"],"names":["React","ToggleButton","ButtonRow","styles","ControlPane","title","type","options","currentOption","handleSelectOption","controlPane","metadata","length","map","id","label","color","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,aAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMd;AACJ,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,WAAvB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEP,MAAM,CAACE,KAAtB;AAAA,iBACGA,KADH,eAGE;AAAM,QAAA,SAAS,EAAEF,MAAM,CAACQ,QAAxB;AAAA,mBACGJ,OAAO,CAACK,MADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,SAAD;AAAA,gBACGL,OAAO,CAACM,GAAR,CAAY,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,KAAb;AAAoBC,QAAAA;AAApB,OAAD,kBACX,QAAC,YAAD;AAEE,QAAA,UAAU,EAAET,aAAa,KAAKM,EAFhC;AAGE,QAAA,OAAO,EAAE,MAAML,kBAAkB,CAACK,EAAD,CAHnC;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,KAAK,EAAEC,KALT;AAAA,kBAOGC;AAPH,SACOH,EADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/BD;;KAAMV,W;AAiCN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nimport ToggleButton from '../ToggleButton';\nimport ButtonRow from '../ButtonRow';\n\nimport styles from './ControlPane.module.css';\n\nconst ControlPane = ({\n  title,\n  type,\n  options,\n  currentOption,\n  handleSelectOption,\n}) => {\n  return (\n    <div className={styles.controlPane}>\n      <h2 className={styles.title}>\n        {title}\n\n        <span className={styles.metadata}>\n          {options.length} options\n        </span>\n      </h2>\n      <ButtonRow>\n        {options.map(({ id, label, color, children }) => (\n          <ToggleButton\n            key={id}\n            isSelected={currentOption === id}\n            onClick={() => handleSelectOption(id)}\n            label={label}\n            color={color}\n          >\n            {children}\n          </ToggleButton>\n        ))}\n      </ButtonRow>\n    </div>\n  );\n};\n\nexport default ControlPane;\n"]},"metadata":{},"sourceType":"module"}